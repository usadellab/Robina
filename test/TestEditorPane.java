
import de.mpimp.golm.robin.RobinConstants;
import java.awt.Rectangle;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import org.openide.util.Exceptions;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TestEditorPane.java
 *
 * Created on 05.10.2011, 20:07:04
 */
/**
 *
 * @author marc
 */
public class TestEditorPane extends javax.swing.JFrame {
    
    private int lastTextLength = 1;
     int c = 0;     

    /** Creates new form TestEditorPane */
    public TestEditorPane() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jEditorPane1.setContentType(org.openide.util.NbBundle.getMessage(TestEditorPane.class, "TestEditorPane.jEditorPane1.contentType")); // NOI18N
        jScrollPane1.setViewportView(jEditorPane1);

        jButton1.setText(org.openide.util.NbBundle.getMessage(TestEditorPane.class, "TestEditorPane.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 288, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.staticAppendToMappingProgressPane("test: "+c, null);
    c++;
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                TestEditorPane pane = new TestEditorPane();
                pane.setVisible(true);
                
                          
                pane.appendToMappingProgressPane("Guten Tag Frau BÃ¤uerin, sie haben\nja riesige Kuchen.\nVielen Dank.\n");                
               
                
                
            }
        });
    }
    
    public synchronized void staticAppendToMappingProgressPane(String text, AttributeSet attr) {
        try {            
            Document doc = this.jEditorPane1.getDocument();            
            if (lastTextLength != 1)
                doc.remove(doc.getEndPosition().getOffset() - (lastTextLength+1), lastTextLength);
            doc.insertString(doc.getEndPosition().getOffset()-1, text+"\n", attr);
            lastTextLength = text.length()+1;
            jEditorPane1.scrollRectToVisible(new Rectangle(0,doc.getLength(),1,1));//mappingProgressPane.getHeight()
            this.repaint();
        } catch (BadLocationException ex) {
            Exceptions.printStackTrace(ex);
        }
    }
    
    public synchronized void appendToMappingProgressPane(String text) {
        try {
            Document doc = this.jEditorPane1.getDocument();
            doc.insertString(doc.getEndPosition().getOffset(), text+"\n", null);
            jEditorPane1.scrollRectToVisible(new Rectangle(0,jEditorPane1.getHeight(),1,1));
            this.repaint();
        } catch (BadLocationException ex) {
            Exceptions.printStackTrace(ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
