threestep              package:affyPLM              R Documentation

_T_h_r_e_e _S_t_e_p _e_x_p_r_e_s_s_i_o_n _m_e_a_s_u_r_e_s

_D_e_s_c_r_i_p_t_i_o_n:

     This function converts an 'AffyBatch' into an 'ExpressionSet'
     using a three step expression measure.

_U_s_a_g_e:

     threestep(object,subset=NULL, normalize=TRUE,background=TRUE,background.method="RMA.2",normalize.method="quantile",summary.method="median.polish",background.param = list(),normalize.param=list(),summary.param=list(),verbosity.level=0)

_A_r_g_u_m_e_n_t_s:

  object: an 'AffyBatch'.

  subset: a vector with the names of probesets to be used. If 'NULL',
          then all probesets are used.

normalize: logical value. If 'TRUE' normalize data using quantile
          normalization

background: logical value. If 'TRUE' background correct using RMA
          background correction

background.method: name of background method to use.

normalize.method: name of normalization method to use.

summary.method: name of summary method to use.

background.param: list of parameters for background correction methods.

normalize.param: list of parameters for normalization methods.

summary.param: list of parameters for summary methods.

verbosity.level: An integer specifying how much to print out. Higher
          values indicate more verbose. A value of 0 will print
          nothing.

_D_e_t_a_i_l_s:

     This function computes the expression measure using threestep
     methods. Greater details can be found in a vignette.

_V_a_l_u_e:

     An 'ExpressionSet'

_A_u_t_h_o_r(_s):

     Ben Bolstad bmb@bmbolstad.com

_R_e_f_e_r_e_n_c_e_s:

     Bolstad, BM (2004) _Low Level Analysis of High-density
     Oligonucleotide Array Data: Background, Normalization and
     Summarization_. PhD Dissertation. University of California,
     Berkeley.

_S_e_e _A_l_s_o:

     'expresso', 'rma'

_E_x_a_m_p_l_e_s:

     data(affybatch.example)

     # should be equivalent to rma()
     eset <- threestep(affybatch.example)

     # Using Tukey Biweight summarization
     eset <- threestep(affybatch.example,summary.method="tukey.biweight")

     # Using Average Log2 summarization
     eset <- threestep(affybatch.example,summary.method="average.log")

     # Using IdealMismatch background and Tukey Biweight and no normalization.
     eset <- threestep(affybatch.example,normalize=FALSE,background.method="IdealMM",summary.method="tukey.biweight")

     # Using average.log summarization and no background or normalization.
     eset <- threestep(affybatch.example,background=FALSE,normalize=FALSE,background.method="IdealMM",summary.method="tukey.biweight")

     # Use threestep methodology with the rlm model fit
     eset <- threestep(affybatch.example,summary.method="rlm")

     # Use threestep methodology with the log of the average
     eset <- threestep(affybatch.example,summary.method="log.average")

     # Use threestep methodology with log 2nd largest method
     eset <- threestep(affybatch.example,summary.method="log.2nd.largest")

     eset <- threestep(affybatch.example,background.method="LESN2")

