topGene               package:RankProd               R Documentation

_O_u_t_p_u_t _S_i_g_n_i_f_i_c_a_n_t _G_e_n_e_s

_D_e_s_c_r_i_p_t_i_o_n:

     Identify differentially expressed genes using  rank product method

_U_s_a_g_e:

          topGene(x,cutoff=NULL,method="pfp",num.gene=NULL,logged=TRUE,logbase=2,gene.names=NULL)

_A_r_g_u_m_e_n_t_s:

       x: the value returned by the  function RP, RP.advance or
          Rsum.advance 

  cutoff: threshold in pfp used to select genes

  method: 

num.gene: number of candidate genes of interests,  if cutoff is
          provided, this will be ignored

  logged: if "TRUE", data has bee logged, otherwise set it  to "FALSE"

 logbase: base used when taking log, used to restore the  fold
          change.The default value is 2, this will be  ignored if
          logged=FALSE

gene.names: if "NULL", no gene name will be  attached to the output
          table

_V_a_l_u_e:

     Two tables of identified genes with  gene.index: index of gene in
     the original data set  RP/Rsum: Computed rank product/sum for each
     gene FC:(class1/class2): Expression Fold change of class 1/ class
     2.                    pfp: estimated pfp for each gene if the gene
     is used as cutoff point P.value: estimated p-value for each gene 

     Table 1 list genes that are up-regulated under class 2, Table 1
     ist  genes that are down-regulated under class 2,

_A_u_t_h_o_r(_s):

     Fangxin Hong fhong@salk.edu

_R_e_f_e_r_e_n_c_e_s:

     Breitling, R., Armengaud, P., Amtmann, A., and Herzyk,  P.(2004)
     Rank Products: A simple, yet powerful, new method  to detect
     differentially regulated genes in replicated microarray
     experiments, _FEBS Letter_, 57383-92

_S_e_e _A_l_s_o:

     'plotRP' 'RP'   'RPadvance' 'RSadvance'

_E_x_a_m_p_l_e_s:

           # Load the data of Golub et al. (1999). data(golub) 
           # contains a 3051x38 gene expression
           # matrix called golub, a vector of length called golub.cl 
           # that consists of the 38 class labels,
           # and a matrix called golub.gnames whose third column 
           # contains the gene names.
           data(golub)

           #use a subset of data as example, apply the rank 
           #product method
           subset <- c(1:4,28:30)
           #Setting rand=123, to make the results reproducible,

           #identify genes 
           RP.out <- RP(golub[,subset],golub.cl[subset],rand=123)  

           #get two lists of differentially expressed genes 
           #by setting FDR (false discivery rate) =0.05

           table=topGene(RP.out,cutoff=0.05,method="pfp",logged=TRUE,logbase=2,
                        gene.names=golub.gnames[,3])
           table$Table1
           table$Table2

           #using pvalue<0.05
           topGene(RP.out,cutoff=0.05,method="pval",logged=TRUE,logbase=2,
                        gene.names=golub.gnames[,3])

           #by selecting top 10 genes

           topGene(RP.out,num.gene=10,gene.names=golub.gnames[,3])

