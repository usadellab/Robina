SCGenericImportDialog.jLabel1.text=<html><h2>Import of generic single channel data</h2> When you click "Load data sample", a table showing the first 50 rows of the chosen sample file that are assumed to contain data will open. Robin requires <span style="color: blue; font-weight: bold;">all generic-type input data</span> in one analysis run to have the <span style="color: blue; font-weight: bold;">same format</span> so please make sure this is provided for. If your data files contain header information before the actual data section Robin tries to figure out where the data starts. However this might fail in some cases. If it fails you could try removing the headers  manually from copies of your original files and import the modified copies. Input files need to be in <span style="color: blue; font-weight: bold;">text format</span>.</html>
SCGenericImportDialog.jLabel14.text=Sample File:
SCGenericImportDialog.loadSampleButton.text=Load data sample
SCGenericImportDialog.jLabel13.text=Decimal separator
SCGenericImportDialog.jLabel12.text=Columns separator
SCGenericImportDialog.jPanel3.border.title=File format
SCGenericImportDialog.columnsPanel.border.title=Required columns
SCGenericImportDialog.jLabel7.text=Flags (optional)
SCGenericImportDialog.jLabel6.text=Identifier
SCGenericImportDialog.jLabel3.text=Background signal
SCGenericImportDialog.jLabel2.text=Foreground signal
SCGenericImportDialog.jPanel1.border.title=Import presets
SCGenericImportDialog.jLabel4.text=Choose:
SCGenericImportDialog.okButton.text=OK
SCGenericImportDialog.cancelButton.text=Cancel
SCGenericImportDialog.savePresetButton.text=
SCGenericImportDialog.loadPresetButton.text=
SCGenericImportDialog.jLabel5.text=Preset
SCGenericImportDialog.jLabel8.text=grid rows
SCGenericImportDialog.jLabel9.text=grid columns
SCGenericImportDialog.jLabel10.text=block cols
SCGenericImportDialog.jPanel4.border.title=Chip Layout
SCGenericImportDialog.loadPresetButton.toolTipText=Load import settings
SCGenericImportDialog.savePresetButton.toolTipText=Save current settings as import preset
SCGenericImportDialog.editLayoutBox.text=Edit manually
SCGenericImportDialog.labe\u00F6jshd.text=block rows
SCGenericImportDialog.loadLayoutButton.toolTipText=Load chip layout preset
SCGenericImportDialog.loadLayoutButton.text=
SCGenericImportDialog.saveLayoutButton.toolTipText=Save as chip layout preset
SCGenericImportDialog.saveLayoutButton.text=

# QC Panel info button texts
SCMainPanel.moreMABOX.infoText=Boxplots and MA plots\nThe boxplots visualize the distribution of unprocessed log scale probe intensities. Generally in a perfect experiment all the plots should be in agreement with each other. Chips that show a strongly deviating probe intensity distribution might be problematic.\n\nIn the MA plots, the normalized log scale probe intensities are plotted against the log fold change in expression when compared to a synthetic chip that was created by taking probe-wise medians of all chips in the input set. A lowess curve is fitted to the scatter plot and the deviation of the data from the theoretically expected zero-line is estimated via the integral of the lowess curve over the zero-line. In addition to this the amount of probes that show a more than 2 fold change in expression are recorded and a warning is issued if the amount exceeds 5% of the genes.
SCMainPanel.moreHIST.infoText=Histograms\nUsing the histogram option of Robin, you get a smoothed histogram of probe intensities on the chip. Using this function you might be able to identify outlying arrays in your sample set.
SCMainPanel.moreSCATTER.infoText=ScatterPlot\nIf you choose the scatter plot option, Robin calculates normalized expression values. These are then displayed in a scatterplot for each probe set. In an ideal situation you should get a 45\u00B0 line indicating no change of expression, outliers from this line represent candidates for differential expression. To aid in examining this plot helper lines indicating a two fold change (a threshold still used often when dealing with microarrays) are also drawn.
SCMainPanel.morePCAHIST.infoText=PCA - Principal component analysis\n\nThe data generated in a microarray experiment can be understood as a matrix of p columns, where p is the number of chips used, and n rows, where n is the number of genes (probesets, probes) measured. Such a dataset could be visualized as a set of n points in a p-dimensional space. The principal component analysis reduces the dimensionality of the dataset by finding a small number of linear combinations of the data that explain most of the variance in the dataset. These are the principal components (PCs). The principal components are ordered by the amount of variance explained and subsequently the first two PCs are plotted against each other.\n\nHierarchical clustering.\n\nThis method performs a hierarchical clustering of the pearson correlation of raw normalized expression estimates for each chip. Chips that show a similar expression profile should cluster together when using this approach. The results are shown as a dendrogram where the branch length depicts 1-correlation score. The hierarchical clustering gives an overview of the internal structure of the data and identifies experimental conditions that generate similar global responses in gene expression. Replicate chips should always cluster closely.
SCMainPanel.moreBACKG.infoText=Background image plots visualize the variation of the background signal for each color channel. These plots are helpful when trying to assess the technical quality of the chip experiment. Artifacts like bubbles on the slides or areas with higher background signal (e.g. due to poor washing) can easily be spotted on these plots.
SCMainPanel.moreANALYSIS.infoText=
SCWorkflowPanel.createMetagroupButton.text=Create Metagroup
SCWorkflowPanel.jPanel25.border.title=Info
SCWorkflowPanel.group2NameField.text=Group2
SCWorkflowPanel.qcLabel1.text=<html> <h3>Run quality check tools</h3> <p>Choose the quality checks you<br> want to include in your analysis and<br> click Next to continue.<br><br>If youdon't want any quality checking <br>you can skip this step.
SCWorkflowPanel.jLabel27.text=Name:
SCWorkflowPanel.SCQualcheckPanelPreviousButton.text=Previous
SCWorkflowPanel.removeFileFromGroup2Button.text=Remove selected
SCWorkflowPanel.SCQualcheckPanelNextButton.text=Next
SCWorkflowPanel.addFileToGroup2Button.text=Add selected
SCWorkflowPanel.removeFileFromGroup1Button.text=Remove selected
SCWorkflowPanel.addFileToGroup1Button.text=Add selected
SCWorkflowPanel.group1NameField.text=Group1
SCWorkflowPanel.jLabel11.text=Name:
SCWorkflowPanel.scQCBoxplotBox.text=Include?
SCWorkflowPanel.confRPNextButton.text=Next
SCWorkflowPanel.moreRNAdigButton1.actionCommand=moreMABOX
SCWorkflowPanel.moreRNAdigButton1.text=more
SCWorkflowPanel.jLabel36.text=<html>MA plots -<small>Shows log<sub>2</sub>-fold change and average expression for each chip compared to the median of all chips</html>
SCWorkflowPanel.confRPPreviousButton.text=Previous
SCWorkflowPanel.jPanel21.border.title=Input files
SCWorkflowPanel.deleteGroupButton.text=Delete group
SCWorkflowPanel.addGroupButton.text=Add group
SCWorkflowPanel.loadGroupListButton.toolTipText=Load group configuration from file.
SCWorkflowPanel.loadGroupListButton.text=Load
SCWorkflowPanel.saveGroupListButton.toolTipText=Save the group configuration to a file for later reuse.
SCWorkflowPanel.saveGroupListButton.text=Save
SCWorkflowPanel.jLabel40.text=<html>Scatterplot - <small>The data will be normalised before plotting the log2-fold<br>expression values of all possible comninations of two chips against each other</small></html>
SCWorkflowPanel.moreHistButton1.actionCommand=moreHIST
SCWorkflowPanel.moreHistButton1.text=more
SCWorkflowPanel.scQCHistBox.text=Include?
SCWorkflowPanel.jLabel38.text=<html>Histogram and boxplot<small> - Shows density- and boxplots of the signal intensity for each chip</small></html>
SCWorkflowPanel.jLabel10.text=<html><h3>Configure groups</h3><br>\nIn this step you can arrange your<br>\ndata files in groups (e.g. representing<br>\nthe replicates of one experimental <br>\ncondition). In the next step you can<br>\nchoose which groups are to be compared.<br>
SCWorkflowPanel.expertSettingsPanel.border.title=Expert settings
SCWorkflowPanel.jLabel43.text=Analysis strategy
SCWorkflowPanel.TCqualchecklabel1.text=<html><h3>Quality check results</h3><br>Click  in the list to open <br>a fullsize view of the results.<br><br>Chips showing very poor <br>results may be excluded from<br>further analyses by checking<br>the <em>"Exclude"</em> box.</html>
SCWorkflowPanel.pValCorrHelpButton3.actionCommand=moreANALYSIS
SCWorkflowPanel.jLabel41.text=Background correction:
SCWorkflowPanel.configGroupsPanelNextButton.text=Next
SCWorkflowPanel.configGroupsPanelPreviousButton.text=Previous
SCWorkflowPanel.scQCScatterBox.text=Include?
SCWorkflowPanel.moreScatterButton1.actionCommand=moreSCATTER
SCWorkflowPanel.moreScatterButton1.text=more
SCWorkflowPanel.expertSettingsBox1.text=<html>Edit expert options</html>
SCWorkflowPanel.scQCIncludeAllBox.text=Select all
SCWorkflowPanel.jLabel48.text=<html><small style="color: gray;"> The chosen default values will be suitable<br> in most cases. They should only be changed<br> by an expert.<br></small></html>
SCWorkflowPanel.scQCBGImageBox.text=Include?
SCWorkflowPanel.moreNUSEButton1.actionCommand=moreBACKG
SCWorkflowPanel.moreNUSEButton1.text=more
SCWorkflowPanel.jLabel13.text=<html>Multiple testing:</html>
SCWorkflowPanel.jLabel12.text=Statistics
SCWorkflowPanel.TCQCResultsPreviousButton.text=Previous
SCWorkflowPanel.TCQCResultsNextButton.text=Next
SCWorkflowPanel.normBetCheckBox.text=
SCWorkflowPanel.bgCorrCheckBox.text=
SCWorkflowPanel.jLabel49.text=normalize between arrays:
SCWorkflowPanel.scQCHclustBox.text=Include?
SCWorkflowPanel.morePCAButton1.actionCommand=morePCAHIST
SCWorkflowPanel.morePCAButton1.text=more
SCWorkflowPanel.jLabel45.text=<html>PCA and hierarchical clustering</html>
SCWorkflowPanel.jLabel47.text=<html>Background signal -<small>Image plots of the background signal intensities measured on each chip</small></html>
SCWorkflowPanel.jLabel15.text=Normalization
SCWorkflowPanel.jLabel14.text=P value correction:
SCWorkflowPanel.jLabel30.text=p-value cutoff:
SCWorkflowPanel.isGuruBox.text=preview R script
SCWorkflowPanel.SCImportNextButton.text=Next
SCWorkflowPanel.jPanel23.border.title=Input files
SCWorkflowPanel.wantsMinLFCBox.text=Log-fold change min=1
SCWorkflowPanel.jLabel26.text=<html><h3>Configure groups</h3><br>\nIn this step you can arrange your<br>\ndata files in groups (e.g. representing<br>\nthe replicates of one experimental <br>\ncondition). Since you chose to use the<br>\nRank Product method to analyse your data<br>\nyou can maximally compare two experimental<br>\nconditions ("classes"). In addition to the<br>\nclass information you can also define the<br>\norigin of each individual data file. This is very<br>\nuseful when the data was generated in two <br>\ndifferent laboratories or people or at different<br>\ntime points.
SCWorkflowPanel.wantsRawDataBox.text=write out raw normalized data
SCWorkflowPanel.jRadioButton2.actionCommand=generic
SCWorkflowPanel.jRadioButton2.text=Generic tabular
SCWorkflowPanel.jLabel25.text=<html><h3>Design your experiment</h3>You can arrange the groups by<br>dragging them around.<br>Define which groups shall be<br><span style="font-weight:bold; color: blue;">compared</span> by holding down the <br><span style="font-weight:bold; color: blue;">CONTROL key</span> and then<br>click-dragging from the <span style="font-weight:bold; color: blue;">first group</span><br>to the <span style="font-weight:bold; color: blue;">second group</span>.<br>Right-click and choose delete to<br>delete connections.<br>To combine several groups into<br>one "metagroup" select all groups<br>you want to combine (by left-clicking<br> and drawing a selection rectangle<br>around them) and click <br>"Create Metagroup".
SCWorkflowPanel.jPanel1.border.title=Data type
SCWorkflowPanel.removeImportButton.text=Remove
SCWorkflowPanel.TCExperimentDesignerNextButton.text=Next
SCWorkflowPanel.addImportButton.text=Add
SCWorkflowPanel.TCExperimentDesignerPreviousButton.text=Previous
SCWorkflowPanel.jLabel5.text=<html><h3>Welcome to Robin!</h3><br>The first step of the data analysis<br>is the import of microarray data into Robin. Please choose the raw data files you want to include in your analysis by pressing the "Add" button. <br><br>Any kind of tabular single channel microarray data can be imported, provided that it is in text format.<br>\nSome input data formats require customized import settings. If you find the type of your input data in the list below, please check it. If not, please choose "generic tabular".</html>
SCWorkflowPanel.jRadioButton1.actionCommand=agilent
SCWorkflowPanel.jRadioButton1.text=Agilent
SCWorkflowPanel.jButton8.text=Reset design
SCWorkflowPanel.deleteMetagroupButton.text=Delete Metagroup
