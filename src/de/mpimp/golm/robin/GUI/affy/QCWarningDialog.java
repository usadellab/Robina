/*
 * QCWarningDialog.java
 *
 * Created on 23. Juni 2008, 13:30
 */

package de.mpimp.golm.robin.GUI.affy;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.SwingUtilities;

/**
 *
 * @author  marc
 */
public class QCWarningDialog extends javax.swing.JDialog implements WindowListener {
    
    public enum TYPE {
        WARNING,
        INFO
    }

    /** Creates new form QCWarningDialog
     * @param parent
     * @param posX
     * @param posY
     * @param msg 
     */
    public QCWarningDialog(java.awt.Frame parent, int posX, int posY, String msg) {
        super(parent, true);        
        this.setUndecorated(true);
        initComponents();
        this.setBackground(Color.WHITE);
        this.warningsTextArea.setText(msg.replaceAll("\\n", " "));
        this.setLocation(posX - this.getWidth() / 2, posY - this.getHeight() / 2);        
        
        // make sure the Dialog's OK button will not slip off the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if ((this.getWidth() + this.getX()) > screenSize.width) {
            int newX = screenSize.width - this.getWidth() - 3;                    
            this.setLocation(newX, posY - this.getHeight() / 2);            
        }        
        this.setVisible(true);
    }
    
    public QCWarningDialog(java.awt.Frame parent, int posX, int posY, String msg, TYPE type) {
        super(parent, true);        
        this.setUndecorated(true);
        initComponents();
        this.setBackground(Color.WHITE);
        this.warningsTextArea.setText(msg.replaceAll("\\n", " "));
        this.setLocation(posX - this.getWidth() / 2, posY - this.getHeight() / 2);        
        
        // make sure the Dialog's OK button will not slip off the screen
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        if ((this.getWidth() + this.getX()) > screenSize.width) {
            int newX = screenSize.width - this.getWidth() - 3;                    
            this.setLocation(newX, posY - this.getHeight() / 2);            
        } 
        
        // slipping off the right border?         
        if ( (this.getX() - this.getWidth()) < 1 ) {
            this.setLocation(1, posY - this.getHeight() / 2);
        }
        
        if (type == TYPE.INFO) {
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/mpimp/golm/robin/resources/info_36.png")));
        }
        
        this.setVisible(true);
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        warningsTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/mpimp/golm/robin/resources/warnings32.png"))); // NOI18N

        jScrollPane1.setBorder(null);

        warningsTextArea.setColumns(20);
        warningsTextArea.setEditable(false);
        warningsTextArea.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        warningsTextArea.setLineWrap(true);
        warningsTextArea.setRows(5);
        warningsTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(warningsTextArea);

        jButton1.setText(org.openide.util.NbBundle.getMessage(QCWarningDialog.class, "QCWarningDialog.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jScrollPane1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea warningsTextArea;
    // End of variables declaration//GEN-END:variables

    public void windowOpened(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowClosing(WindowEvent e) {
        this.dispose();
    }

    public void windowClosed(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowIconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowDeiconified(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowActivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet.");
    }

}
