CelFileInfoPanel.jLabel14.text=DatHeader:
CelFileInfoPanel.jLabel16.text=AlgorithmParameters:
CelFileInfoPanel.jToggleButton1.text=show
CelFileInfoPanel.jToggleButton2.text=show
CelFileInfoPanel.jToggleButton1.actionCommand=showAlgPar
CelFileInfoPanel.jLabel17.text=File:
CelFileInfoPanel.columnsLabel.text=Columns:
CelFileInfoPanel.rowsLabel.text=Rows:
CelFileInfoPanel.totalXLabel.text=TotalX:
CelFileInfoPanel.totalYLabel.text=TotalY:
CelFileInfoPanel.offsetXLabel.text=OffsetX:
CelFileInfoPanel.offsetYLabel.text=OffsetY:
CelFileInfoPanel.algorithmLabel.text=Algorithm:
CelFileInfoPanel.axisInvertXLabel.text=AxisInvertX:
CelFileInfoPanel.axisInvertYLabel.text=AxisInvertY:
CelFileInfoPanel.swapXYLabel.text=SwapXY:
CelFileInfoPanel.gridCornerULLabel.text=GridCornerUL:
CelFileInfoPanel.gridCornerLLLabel.text=GridCornerLL:
CelFileInfoPanel.gridCornerURLabel.text=GridCornerUR:
CelFileInfoPanel.gridCornerLRLabel.text=GridCornerLR:
CelFileInfoPanel.fileNameField.text=
CelFileInfoPanel.detailPanel.border.title=Details
CelFileInfoPanel.jToggleButton3.text=show details
CelFileInfoPanel.chipTypeLabel.text=Chip type:
RobinMainGUI.plmInfoText=PLM\nUsing PLM a model is fitted to the probe levels (similar to RMA).Afterwards, the weights which had been used by robust regression to down-weigh potential outliers, can be visualized. This is done using the PLMfit option. Using this option, one is able to detect possible artifacts on the chips.
RobinMainGUI.rnaInfoText=RNA Degradation plots\nUsually reverse transcription is started at the 3' end whereas degradation often starts from the 5' end. Thus probes more 3' are usually higher in values than the 5' probes within each gene. Therefore, a plot of average intensities versus position usually gives an ascending line, with which degradation can be estimated. If used for an array batch potential differences in RNA quality can be estimated using this plot.
RobinMainGUI.histInfoText=Histograms\nUsing the histogram option of Robin, you get a smoothed histogram of probe intensities on the chip. Using this function you might be able to identify outlying arrays in your sample set.
RobinMainGUI.scatterInfoText=ScatterPlot\nIf you choose the scatter plot option, Robin calculates normalized expression values. These are then displayed in a scatterplot for each probe set. In an ideal situation you should get a 45\u00b0 line indicating no change of expression, outliers from this line represent candidates for differential expression. To aid in examining this plot helper lines indicating a two fold change (a threshold still used often when dealing with microarrays) are also drawn.
RobinMainGUI.normalizationInfoText=Normalizing microarrays:\n\nThroughout the process of a microarray experiment, several factors can influence the actual outcome of the measured intensities. For example it is quite unlikely that in a treatment and in a control sample the exact same amount of RNA was used and that the efficiency of the RTase was exactly the same. Moreover there might be differences in labeling efficiency etc pp.\n Therefore, techniques have to be employed that account for these differences, which convert the raw intensities of the individual probes into a corrected summary information for the probe set.\nGenerally Affymetrix microarray consist of probesets which contain on average 11 perfect match probes and 11 mismatch probes of 25 nt each.\n Here, the middle nucleotide of the mismatch probes is substituted for by a non matching one.\nCurrently, probably the most common normalization techniques are MAS5 as supplied by Affymetrix, the RMA (robust multichip average) and gc-rma.\nIn short, MAS5 uses both perfect match and mismatch probes on the chips. \nFirstly it determines if the perfect matches show more hybridization than the mismatches, in which case it will give the probe set a present call.\nThe signal fort he probe set is determined as the anti-log of the Tukey biweight of the value X=log(perfect match-mismatch adj) where mismatch adj is either equal to the mismatch value or smaller than that, so that the value perfect match/mismatch adjust is always a positive value.\nFinally the data is scaled.\nDue to the scaling and the fact that MAS5 only relies on single chip data, one can compare chips that were normalized in different runs.\nRMA, fits a model to the perfect match probes to correct efficiently for the background. RMA does not take mismatch probes into account at all.\nAfterwards, probe quantile normalization is performed and finally the data is summarized using a median polish procedure.\nRMA always works on a batch of microarrays. Thus, if you analyze chip A, B, C and in a different setup chips B,C,D it may well happen that the expression values of B and C are different in the two normalizations.\nGC-RMA takes the sequence of the pobes into account fore background correction. Otherwise it works very similar as RMA alone.\nA comparison of different methods to real-time RT-PCR was performed by Quinn et al. (2006).\n\nQin LX, Beyer RP, Hudson FN, Linford NJ, Morris DE, Kerr KF (2006) Evaluation of methods for oligonucleotide array data via quantitative real-time PCR.  BMC Bioinformatics. 17;7:23.
RobinMainGUI.pValCorrInfoText=-Bonferroni (simply multiplies the p-values by the number of comparisons)\n-Holm \nboth being applicable under any assumptions\n\n-Hochberg\n-Hommel\nboth are only valid when the tests are independent or non negatively associated or to adjust the false discovery rate at a given level (i.e. among the rejected null hypothesis %FDR are wrongly rejected) Benjamini Hochberg which makes strong assumptions Benjamin Yekutieli which is applicable under more relaxed assumptions.\n\nGenerally it is accepted to use Benjamini Hochberg FDR control when using microarray analyses on gene by gene basis. This FDR control type multiple testing correction is the most powerful, meaning that after correcting for multiple testing, in general it will reject most null hypotheses of all correction procedures. Therefore, you probably do not need to change it unless you assume that you might violate some of the assumptions of Benjamini Hochberg\n\nThe different corrections are discussed thoroughly in: Sandrine Dudoit, Juliet Popper Shaffer and Jennifer C. Boldrick (2003) Multiple Hypothesis Testing in Microarray Experiments Statistical Science 2003, Vol. 18, No. 1, 71;103\n\nBenjamini Y and Hochberg Y (1995). Controlling the false discovery rate: A practical and powerful approach to multiple testing. J. Roy. Statist. Soc. Ser. B 57 289\ufffd300. Benjamini Y and Yekutieli D (2001). The control of the false discovery rate in multiple testing under dependency. Ann. Statist. 29 1165;1188.
RobinMainGUI.boxPlotInfoText=Boxplots and MA plots\nThe boxplots visualize the distribution of unprocessed log scale probe intensities. Generally in a perfect experiment all the plots should be in agreement with each other. Chips that show a strongly deviating probe intensity distribution might be problematic.\n\nIn the MA plots, the normalized log scale probe intensities are plotted against the log fold change in expression when compared to a synthetic chip that was created by taking probe-wise medians of all chips in the input set. A lowess curve is fitted to the scatter plot and the deviation of the data from the theoretically expected zero-line is estimated via the integral of the lowess curve over the zero-line. In addition to this the amount of probes that show a more than 2 fold change in expression are recorded and a warning is issued if the amount exceeds 5% of the genes.
RobinMainGUI.NUSERLEInfoText=RLE - Relative logarithmic expression\nRLE plots are generated by subtracting the median log scale expression value for each gene across all chips in the input set from the individual (log scale) estimates for each gene. These relative expressions are displayed as boxplots. Based on the assumption that most genes will not be differentially expressed the boxes should be centered around M=0 and would ideally have a small spread. Strong deviations like larger spread or median values that are not close to 0 indicate problems.\n\nNUSE - Normalized unscaled standard error\nThe standard error estimates for each gene are normalized by dividing them by the median of all standard error estimates for each gene and then displayed as boxplots. Individual arrays that show a significantly more spread out or elevated NUSE might be of lower quality.
RobinMainGUI.PCAInfoText=PCA - Principal component analysis\n\nThe data generated in a microarray experiment can be understood as a matrix of p columns, where p is the number of chips used, and n rows, where n is the number of genes (probesets, probes) measured. Such a dataset could be visualized as a set of n points in a p-dimensional space. The principal component analysis reduces the dimensionality of the dataset by finding a small number of linear combinations of the data that explain most of the variance in the dataset. These are the principal components (PCs). The principal components are ordered by the amount of variance explained and subsequently the first two PCs are plotted against each other.\n\nHierarchical clustering.\n\nThis method performs a hierarchical clustering of the pearson correlation of raw normalized expression estimates for each chip. Chips that show a similar expression profile should cluster together when using this approach. The results are shown as a dendrogram where the branch length depicts 1-correlation score. The hierarchical clustering gives an overview of the internal structure of the data and identifies experimental conditions that generate similar global responses in gene expression. Replicate chips should always cluster closely.
RScriptEditor.title=R script editor window
RScriptEditor.acceptButton.text=Accept
RScriptEditor.cancelButton.text=Cancel
RScriptEditor.resetButton.text=Reset
QCWarningDialog.jButton1.text=OK
AffyWorkflowPanel.moreNUSEButton.text=more
AffyWorkflowPanel.nuseBox.text=Include?\n
AffyWorkflowPanel.jPanel20.border.title=Info
AffyWorkflowPanel.qcIncludeAllBox.text=Select all
AffyWorkflowPanel.jLabel24.text=<html><small style="color: gray;"> The chosen default values will be suitable<br> in most cases. They should only be changed<br> by an expert.<br></small></html>
AffyWorkflowPanel.jLabel23.text=<html>NUSE and RLE - <small>Normalized unscaled standard errors and <br>relative logarithmic expression</small></html>
AffyWorkflowPanel.showQCPanelPreviousButton.text=Previous
AffyWorkflowPanel.showQCPanelNextButton.text=Next
AffyWorkflowPanel.jLabel7.text=<html>\n<h3>Quality check results</h3><br>\nClick  in the list to open <br>\na fullsize view of the results.<br><br>\nChips showing very poor PLM<br>\nresults may be excluded from<br>\nfurther analyses by checking<br>\nthe <em>"Exclude"</em> box.\n</html>
AffyWorkflowPanel.jLabel19.text=p value correction
AffyWorkflowPanel.expertSettingsPanel.border.title=Expert settings
AffyWorkflowPanel.jLabel18.text=Normalisation
AffyWorkflowPanel.expertSettingsBox.text=<html>Edit expert options</html>
AffyWorkflowPanel.jLabel29.text=p-value cutoff:
AffyWorkflowPanel.LFC2Box.toolTipText=<html>\nIgnore genes with less than<br>\n2 log-fold change in expression.<br>\nThis option will filter out genes<br>\nthat are called significant but <br>\nwhose change in expression is<br>\nvery small.\n</html>
AffyWorkflowPanel.LFC2Box.text=Log-fold change min=1
AffyWorkflowPanel.moreScatterButton.text=more
AffyWorkflowPanel.mainWriteRawBox.text=<html>Write out normalized<br>raw data</html>
AffyWorkflowPanel.guruBox.toolTipText=<html>\nReview the generated R script<br>\nbefore it is sent to the R engine<br>\nand make manual changes. Only<br>\nrecommended for experienced R<br>\nusers.</html>
AffyWorkflowPanel.guruBox.text=<html>Preview R script</html>
AffyWorkflowPanel.jLabel3.text=<html>Multiple testing<br>strategy:</html>
AffyWorkflowPanel.pcaBox.text=Include?\n
AffyWorkflowPanel.morePCAButton.text=more
AffyWorkflowPanel.jLabel21.text=<html>PCA and hierarchical clustering</html>
AffyWorkflowPanel.jLabel6.text=Box plot and MA plots
AffyWorkflowPanel.qualcheckPanelPreviousButton.text=Previous
AffyWorkflowPanel.qualcheckPanelNextButton.text=Next
AffyWorkflowPanel.qcLabel.text=<html> <h3>Run quality check tools</h3> <p>Choose the quality checks you<br> want to include in your analysis and<br> click Next to continue.<br><br>If you\ndon't want any quality checking <br>you can skip this step. \n
AffyWorkflowPanel.jLabel28.text=Analysis strategy
AffyWorkflowPanel.jScrollPane3.border.title=Imported files
AffyWorkflowPanel.jLabel2.text=P value correction:
AffyWorkflowPanel.jLabel1.text=Normalisation:
AffyWorkflowPanel.jLabel5.text=<html><h3>Welcome to Robin!</h3><br> The first step of the data analysis<br> is the import of microarray data<br> into Robin. Please choose the raw data files<br>  you want to include in your analysis<br> by pressing the "Add" button. <br><br> The "Info" button will provide some<br> details for each selected data file.<br>
AffyWorkflowPanel.mainExpertPanel.border.title=Expert settings
AffyWorkflowPanel.importPanelNextButton.text=Next
AffyWorkflowPanel.createMetagroupButton.text=Create Metagroup
AffyWorkflowPanel.jLabel25.text=<html><h3>Design your experiment</h3>\n\nYou can arrange the groups by<br>\ndragging them around.<br>\nDefine which groups shall be<br>\n<span style="font-weight:bold; color: blue;">compared</span> by holding down the <br>\n<span style="font-weight:bold; color: blue;">CONTROL key</span> and then<br>\nclick-dragging from the <span style="font-weight:bold; color: blue;">first group</span><br>\nto the <span style="font-weight:bold; color: blue;">second group</span>.<br>\n\nRight-click and choose delete to<br>\ndelete connections.<br>\nTo combine several groups into<br>\none "metagroup" select all groups<br>\nyou want to combine (by left-clicking<br>\n and drawing a selection rectangle<br>\naround them) and click <br>\n"Create Metagroup".
AffyWorkflowPanel.celFileInfoButton.text=Info
AffyWorkflowPanel.mainExpertBox.text=Show expert settings
AffyWorkflowPanel.group2NameField.text=Group2
AffyWorkflowPanel.jLabel27.text=Name:
AffyWorkflowPanel.addImportButton.text=Add
AffyWorkflowPanel.scatterBox.text=Include?
AffyWorkflowPanel.deleteMetagroupButton.text=Delete Metagroup
AffyWorkflowPanel.removeFileFromGroup2Button.text=Remove selected
AffyWorkflowPanel.removeImportButton.text=Remove
AffyWorkflowPanel.resetDesignButton.text=Reset design
AffyWorkflowPanel.addFileToGroup2Button.text=Add selected
AffyWorkflowPanel.jLabel17.text=<html>Scatterplot - <small>The data will be normalised before plotting the log2-fold<br>\nexpression values of all possible comninations of two chips against each other</small></html>
AffyWorkflowPanel.moreHistButton.text=more
AffyWorkflowPanel.histBox.text=Include?\n
AffyWorkflowPanel.jLabel15.text=<html>Histogram<small> - Shows density plots of the signal intensity for each chip</small></html>
AffyWorkflowPanel.confRPPreviousButton.text=Previous
AffyWorkflowPanel.confRPNextButton.text=Next
AffyWorkflowPanel.removeFileFromGroup1Button.text=Remove selected
AffyWorkflowPanel.jLabel13.text=<html>RNA digestion - <small>Uses ordered probes in probeset<br>  to detect possible RNA degradation</small></html>
AffyWorkflowPanel.addFileToGroup1Button.text=Add selected
AffyWorkflowPanel.moreRNAdigButton.text=more
AffyWorkflowPanel.group1NameField.text=Group1
AffyWorkflowPanel.RNAdigBox.text=Include?\n
AffyWorkflowPanel.jLabel4.text=Name:
AffyWorkflowPanel.deleteGroupButton.text=Delete group
AffyWorkflowPanel.addGroupButton.text=Add group
AffyWorkflowPanel.jLabel8.text=<html><h3>Configure groups</h3><br>\nIn this step you can arrange your<br>\ndata files in groups (e.g. representing<br>\nthe replicates of one experimental <br>\ncondition). In the next step you can<br>\nchoose which groups are to be compared.<br>
AffyWorkflowPanel.configGroupsPanelNextButton.text=Next
AffyWorkflowPanel.morePLMButton.text=more
AffyWorkflowPanel.PLMBox.text=Include?\n
AffyWorkflowPanel.configGroupsPanelPreviousButton.text=Previous
AffyWorkflowPanel.jLabel11.text=<html>PLM - <small>Fitting probe level models to the data</small></html>
AffyWorkflowPanel.boxPlotBox.text=Include?
AffyWorkflowPanel.moreBoxPlotButton.text=more
AffyWorkflowPanel.confAnalysisPreviousButton.text=Previous
AffyWorkflowPanel.confAnalysisNextButton.text=Next
AffyWorkflowPanel.saveGroupsTableButton.toolTipText=Save the group configuration to a file for later reuse.
AffyWorkflowPanel.saveGroupsTableButton.text=Save
AffyWorkflowPanel.loadGroupsTableButton.toolTipText=Load group configuration from file.
AffyWorkflowPanel.loadGroupsTableButton.text=Load
AffyWorkflowPanel.jLabel26.text=<html><h3>Configure groups</h3><br>\nIn this step you can arrange your<br>\ndata files in groups (e.g. representing<br>\nthe replicates of one experimental <br>\ncondition). Since you chose to use the<br>\nRank Product method to analyse your data<br>\nyou can maximally compare two experimental<br>\nconditions ("classes"). In addition to the<br>\nclass information you can also define the<br>\norigin of each individual data file. This is very<br>\nuseful when the data was generated in two <br>\ndifferent laboratories or people or at different<br>\ntime points.
AffyWorkflowPanel.jPanel21.border.title=Input files
AffyWorkflowPanel.jPanel23.border.title=Input files
AffyWorkflowPanel.jLabel30.text=Plot components:
AffyWorkflowPanel.jLabel31.text=<html>\nIf you are working with<br>\na custom affy chip platform<br>\nthat is not yet supported by<br>\nthe bioconductor project you<br>\nneed to supply the appropriate CDF<br>\nfile upon data import.\n</html>
AffyWorkflowPanel.importCDFbox.text=Import CDF file
AffyWorkflowPanel.importCDFFileField.text=
AffyWorkflowPanel.importCDFButton.text=
